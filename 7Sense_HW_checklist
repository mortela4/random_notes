Hardware checklist
===================

This is a document to describe the process of
hardware design internally at 7Sense Technologies AS.

It is both a checklist and a review-procedure document,
aiming not only to reveal lack of planning, 
missing steps in design flow and other discrepancies, 
but also (hopefully) provide help in the process of 
enforcing good design methodology.

Note that this is an INTERNAL document, 
NOT a deliverable! It's target audience is primarily 
fellow HW & SW developers within 7Sense, 
not staff at contract manufacturers or external customers. 
This implies that content is adapted for those who are 
tasked with interpreting, comprehending and using the HW design.
Some points regarding PCB-specific characteristics are included, 
but a separate document shall be used for reviewing a design 
for 'manufacturing-readiness'.  


Design review
--------------
1) Is project internal, or for external customer?

2) how is design planned
- from written specifications, provided by customer?
- from written specifications, 
  * if (any) YES, provide reference(s)!

2) how is the design implemented?
- based on reference design?
- input from software engineers
- design from scratch

3) is a block schematic provided?
- if NO give rationale

4) is a design interpretation presented?
- if NO give rationale
- if YES, is the interpretation recorded and accepted by team leader (and optionally the team)?

5) Is a test-strategy provided?
- if NO give rationale
- if YES, 
a) is the interpretation recorded and accepted by team leader (and optionally the team)?
b) does the test-stragegy involve (check all YES/NO)
* BIT (i.e. automated or semi-automated HW-test). Name type (e.g. bed-of-nails, JTAG) or method:
* BIST (i.e. automated HW self-test). Name type (e.g. ROM code) or method:
* manual procedures. Specify method:

6) Overall project description.
a) Is a project design-description provided?
If YES, add reference:
If NO, give rationale:
b) What type of components does the design contain?
Check all that applies:
* Power, including modules. Describe voltage(s) and current output in [A] (e.g. 400V/10A):
* Frequency-control, including modules. Describe type(s) and frequency/frequencies:
* MCU, including modules. Provide description (architecture and internal memories), full partnumber(s) or optionally base partnumber if multiple pin-compatibles:
* MPU/CPU (or SoC), including modules. Provide description (architecture and internal memories), full partnumber(s) or optionally base partnumber if multiple pin-compatibles:
* FPGA/PLD, including modules. Provide full partnumber(s) or optionally base partnumber or product family if multiple pin-compatibles:
* RF (including Bluetooth/BLE). Provide frequency/frequencies in [Hz], and protocol (if any), along with full partnumber(s) or optionally base partnumber or product family if multiple pin-compatibles:
* Display. Type or standard:
* Wired networking. Type or standard:
* Wireless networking. Type or standard:
* Memories/storage. Type and optionally standard/product-family(indicates 2.source exist):
* Sensors. Type(s):
* Other types regarded as of importance. List what types:

NOTE: if none of the above component types are checked, 
the design is assumed to consist solely of connectors, signal routing and/or passive components!


Design tools and procedures
---------------------------

Tools:

1) list tools and versions thereof used for design

2) list tools and versions thereof used for verification

3) list and describe manual procedures used in design and verification, 
   especially cases where tools were not sufficient

4) Describe type and format of design-handoff deliverables (BOM etc.):


Design flow:

1) schematic properties
a) are pin properties used? (YES/consistently, Partially, NO/excluded)
If YES, specify pin property types:
- direction --> out, in, bidirectional
- type --> open-drain/source, CMOS(Rail-to-Rail), TTL, LVDS, analog, dedicated(e.g. USB) etc.
- fanout --> constrained(1:1/1:N = number of 'characterisic loads' - specify capacitance or current-drive), dedicated(Tx/Rx-pair) etc.
- drive --> [x]mA sink/source, SlewRate, Schmitt-trigger input, tristatable(OUTput) etc.
- I/O-voltage --> [V]-standard, multi-drive(given by Vdd_io) or range(specify Vhi(min), Vhi(max))
- STATIC (connected to Vcc or GND, directly or thorugh pull-up/down) or DYNAMIC(optionally specify max. switching frequency)
b) other constraints used (specify!) --> e.g. connection required, conditionally required or optional

2) Rules checking
a) what types of DRC and/or ERC have been conducted?
- connectivity check (= "all nets connected?")
- I/O integrity 
  * no two outputs connected to each other, unless open drain or open-source or bidirectional 
  * pull-up/down where required --> have all INputs been analyzed for static level forcing?
- voltage compatibility --> OUTput connected to INput of same or compatible I/O voltage level and/or signalling type

3) Simulation & formal verification
a) were complete, functional simulation of design performed?
b) if YES to above
- add reference to simulation results/output here:
- specify TYPE of simulation: (analog, digital, both(separate) or co-sim/mixed-signal)
c) if NO to above, specify what part(s) were simulated:
* Power Supply/supplies
* analog part of design
* digital part of design 
* other (specify):
d) S-parameters extracted & analyzed, or critical nets verified as (2E8[m/s] / fmax) > 2*L ?



Design implementation
---------------------

Design foundation:

1) If a reference design was used (see: HW Design Review, part 1),
indicate if the following procedures followed:
a) pinout (i.e. GPIOs) of programmable device (MCU, CPU/SoC, FPGA/PLD or similar) re-used -
i.e. exactly the same?
b) PCB layout exactly the same (i.e. copied from design files)?
- if NO to above, were PCB layout of critical nets kept exactly the same?
c) peripheral devices (e.g. memories, transceivers, power-supply devices etc.) kept exactly the same?
d) is usage of peripheral devices (e.g. mode, speed etc.) kept exactly the same?
- if NO to above, was peripheral device used in another mode or at another speed?
e) was exactly same levels on I/Os used?
f) was exactly same connectors used?


Design partitioning and modularization:

2) Was Power-supply design made modular?
If NO (i.e. fully discrete solution implemented on (main)board), give rationale:

If YES to above, specify if supply (or supplies) is/are implemented  
a) as custom-designed module?
b) with COTS module(s)?
If YES to b), specify product(s):

2.1) Give rationale for choice above:

3) Was any off-chip memories (RAM, Flash etc.) used?
If YES, was this in the form of
a) discrete design?
b) standard module (e.g. DIMM, SDcard, M.2 etc.)?
If YES to b), specify type and/or specific product(s):

3.1) Give rationale for choice above:


4) Was computing-subsystem design made modular?
If NO (i.e. fully discrete solution implemented on (main)board), give rationale:

If YES to above, fill out section 4.1, 4.2 and 4.3! 

4.1) specify if MCU/CPU/SoC/FPGA subsystem(s) is/are implemented  
a) as custom-designed module? Specify IC device(s):
b) with COTS module(s)? Specify product(s) and standard (e.g. OSM from sget.org):

4.2) specify connectivity of computing module
a) solderable, non-standardized
b) solderable, non-standardized. Reference to standard:
c) pin-header, non-standard pinout
d) pin-header, w. standardized pinout. Reference to standard:
e) board connector, non-standard pinout
f) board connector, w. standardized pinout. Reference to standard:
g) backplane (i.e. 'rack') connector, non-standard pinout
h) backplane (i.e. 'rack') connector, w. standardized pinout. Reference to standard:
Rationale for chosen implementation:

4.3) Computing-subsystem partitioning design-goals
Select ONE of the following:
a) computing module to be re-used
b) carrier-board to be re-used
c) both module and carrier-board designed for re-use
d) multiple, connected but replaceable computing units


5) Was RF-subsystem design made modular?
If NO (i.e. fully discrete solution implemented on (main)board), give rationale:

If YES to above, fill out section 5.1 and 5.2! 
5.1) specify if RF subsystem(s) is/are implemented  
a) as custom-designed module? Specify IC device(s):
b) with COTS module(s)? Specify product(s) and standard (e.g. Arduino-type expansion board, mPCIE module etc.):

4.2) specify connectivity of RF module
a) solderable, non-standardized
b) solderable, non-standardized. Reference to standard:
c) pin-header, non-standard pinout
d) pin-header, w. standardized pinout. Reference to standard:
e) board connector, non-standard pinout
f) board connector, w. standardized pinout. Reference to standard:
Rationale for chosen implementation:

4.3) RF-subsystem partitioning design-goals
Select ONE of the following:
a) RF module to be re-used
b) carrier-board to be re-used
c) both


6) Was networking-subsystem design made modular?
If NO (i.e. fully discrete solution implemented on (main)board), give rationale:

If YES to above, fill out section 6.1, 6.2 and 6.3! 


Environment constraints:

7) Operational range
a) Has temperature range been specified? Specify Ta(min)/Ta(max) in [C]:
b) Has pressure range been specified? Specify Pa(min)/Pa(max) in [Bar]:
c) Has moisture range been specified? Specify Hg(min)/Hg(max) in [%]:



Schematic design & implementation
----------------------------------
This section cannot be filled out until the 
previous sections are completed, and agreed upon by 
team leader and reviewer(s)!

1) Schematic construction
List named, functional blocks in the design:
a) are all functional blocks present as separate blocks in schematic?
b) are all functional blocks drawn with easily identifiable I/O ports, where symbol gives direction?
c) are all signal nets attached to a testpoint labeled "TP<n>" (n=testpoint number)?
d) does differential analog signal-pairs or balanced digital I/Os have a testpoint-pair 
   attached as closely to each other - and optionally to the driver - as possible?
e) are all supply-nets attached to at least one testpoint?
f) is there at least one pin or fixture in the schematic for easy connection to signal GND?
g) are all input terminals placed on the left side of schematic / each sub-schematic?
h) are all output terminals placed on the right side of schematic / each sub-schematic?
i) are all (passive) component tolerances given in schematic wherever non-default?
j) are a default tolerance value given for each type of (passive) components?

2) Schematic design output
a) is an automated BOM produced from the schematic?
b) is a PDF of the schematic in color produced, with search capability?


PCB design & implementation
----------------------------
This section cannot be filled out until the 
previous sections are completed, and agreed upon by 
team leader and reviewer(s)!

1) PCB characteristics
a) type of material:
b) # of layers:
   Which is sum of
   - # of Vcc layers:
   - # of GND layers:
   - # of signal layers:
   - # of other layers:
   NOTE: specify as signal layers if Vcc and signal routed on same layer!
c) copper thickness(es):
d) type of post-processing (e.g. filling, surface processing etc.): 
   NOTE: specify "none" if no post-processing is expected!
e) dimensions w/o components as L(max)/H(max)/W(max):

2) PCB layout
a) Standards compliance (e.g. IPC-std. etc.):
b) Design-rules used ("none" if NOT applicable):
c) Symbol library/libraries used:
d) Complexity (# of nets):
e) Longest net in [mm]:
f) (Estimated) highest frequency on any net in [Hz]:

3) PCB layout verification
a) Has netlist extraction & automated comparison with schematic been performed?
b) has parasitics extraction & automated back-annotation of netlist been performed?
c) has design-rules check (DRC) been performed on layout?
d) has alignment structures been incorporated in layout?
f) has 3D model of PCB been created, with all components included?
g) has 3D model of mechanics been created, and integrated with 3D model of PCB w. components?
h) has access to all connectors been verified?

4) PCB design completion
a) Are silkscreen containing all testpoint labels?
If NO, list which are missing:
b) Are silkscreen indicating connector orientation and pinning? 
NOTE: that is, preferably all pin numbers as labels, minimum pin#1.












